<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/1999/REC-html401-19991224/loose.dtd">
<html lang="en">

<head>
	<meta http-equiv="content-type" content="text/html; charset=UTF-8">
	<title>
		yt2009_relay
	</title>

	<link id="www-core-css" rel="stylesheet" href="/www-core-vfl122413.css">
	<style>
		ul {
			margin-left: 15px;
			list-style: disc;
		}
	</style>
</head>

<body class="date-20091111 en_US is-english">
	<!-- begin masthead section -->
	<div id="page" class="">
	</div>
	<div id="masthead-container">
		<div id="masthead" class="">
			<div id="masthead-utility" style="visibility: hidden;cursor: default;">
				<span class="utility-item">
					<a href="#"><strong>Create Account</strong></a>
					<span class="utility-joiner">or</span>
					<a href="#">Sign In</a>
				</span>
			</div>
			<div id="masthead-nav-user">
				<a href="/watch_queue?all" id="quicklist-nav" style="display: none;">QuickList (<span id="quicklist-nav-count">0</span>)</a>
				<a href="/my_subscriptions?masthead=1">Subscriptions</a>
				<a href="/my_history">History</a>
				<a class="yt-button yt-button-urgent yt-button-short" id="" href="/my_videos_upload"><span>Upload</span></a>
			</div>
			<div id="masthead-end"></div>

		</div>
	</div>
	<!-- end masthead section -->
	<div id="baseDiv" class="date-20091111 video-info ">
		<!-- begin top section -->
		<h1>yt2009_relay link</h1>
		<hr>
		<p>input a 6-character relay code (case-sensitive) to save:</p>
		<input type="text" autocomplete="off" spellcheck="false" id="relay-code"/>
		<a class="yt-button yt-button-primary" href="#" onclick="relay_code_update();"><span>save</span></a>
		<p>this code should be shown when you first launch relay or in the user data file.</p>
		<hr>
		<p>if needed, change the relay port.</p>
		<input type="number" autocomplete="off" spellcheck="false" id="relay-port"/>
		<a class="yt-button yt-button-primary" href="#" onclick="relay_port_update();"><span>save</span></a>
		<p>by default, relay uses port 6547, but if needed, you can change it in the config and here.</p>
		<hr>
		<p class="relay-connection-test-result">click the "test relay" button to check if yt2009 can connect to your locally hosted relay.<br>note: relay has to be started for any of those tests to pass.</p>
		<a class="yt-button yt-button-primary" href="#" onclick="relay_connect();"><span>test relay</span></a>
		<div>
			<p id="relay-connection">connection to locally-hosted relay - ?</p>
			<p id="relay-authorized">relay authorized with a 6-character code - ?</p>
			<p id="yt-account">youtube account properly setup - ?</p>
		</div>
		<div id="use-login-simulate-name" class="hid">
			<hr>
			<p>if you want, you can change your login_simulate name to your connected youtube name.</p>
			<a class="yt-button yt-button-primary"
				href="#" onclick="login_simulate_change(this)">
				<span id="ytname-option1">username</span>
			</a>
			<a class="yt-button yt-button-primary"
				href="#" onclick="login_simulate_change(this)">
				<span id="ytname-option2">@handle</span>
			</a>
			<a class="yt-button yt-button-primary"
				href="#" onclick="login_simulate_change(this)">
				<span id="ytname-option3">handle</span>
			</a>
		</div>

		<!-- end bottom section -->
	</div>
	<a name="pageBottom"></a>
	<script>
		function get_relay_port() {
			var port = 6547;
			if(document.cookie.indexOf("relay_port=") !== -1) {
				port = parseInt(
					document.cookie.split("relay_port=")[1].split(";")[0]
				)
			}
			return port;
		}
		function get_relay_key() {
			var key = "000000"
			if(document.cookie.indexOf("relay_key=") !== -1) {
				key = document.cookie.split("relay_key=")[1].split(";")[0]
			}
			return key;
		}

		// relay connection
		function relay_connect() {
			var r = new XMLHttpRequest();
			var host = "http://127.0.0.1:" + get_relay_port() + "/"
			r.open("GET", host)
			r.send(null)
			r.addEventListener("load", function(e) {
				document.getElementById("relay-connection").innerHTML =
				"connection to locally-hosted relay - successful!"
				relay_test_authorization();
			}, false)
			r.addEventListener("error", function(e) {
				document.getElementById("relay-connection").innerHTML =
				"connection to locally-hosted relay - connection error"
			})
		}

		// authorization endpoint test
		function relay_test_authorization() {
			var r = new XMLHttpRequest();
			var host = "http://127.0.0.1:" + get_relay_port() + "/"
			r.open("GET", host + "relay_test_auth")
			r.setRequestHeader("auth", get_relay_key())
			r.send(null)
			r.addEventListener("load", function(e) {
				if(r.status == 401) {
					setError()
					return;
				}
				document.getElementById("relay-authorized").innerHTML =
				"relay authorized with a 6-character code - successful!"
				relay_test_yt();
			}, false)
			function setError() {
				document.getElementById("relay-authorized").innerHTML =
				"relay authorized with a 6-character code - error.<br>\
				set your relay key above and try again."
			}
			r.addEventListener("error", setError)
		}

		// youtube account request
		function relay_test_yt() {
			var r = new XMLHttpRequest();
			var host = "http://127.0.0.1:" + get_relay_port() + "/"
			r.open("GET", host + "relay_test_yt")
			r.setRequestHeader("auth", get_relay_key())
			r.send(null)
			r.addEventListener("load", function(e) {
				if(r.status == 404) {
					setError()
					return;
				}
				var res = JSON.parse(r.responseText)
				document.getElementById("yt-account").innerHTML =
				"youtube account properly setup - connected account found: "
				+ res.username

				// update selectable login_simulate names
				document.getElementById("ytname-option1")
						.innerHTML = res.username
				document.getElementById("ytname-option2")
						.innerHTML = res.handle
				document.getElementById("ytname-option3")
						.innerHTML = res.handle.replace("@", "")
				document.getElementById("use-login-simulate-name")
						.className = ""

				// playlists
				appendPlaylists(res.playlists)
			}, false)
			function setError() {
				document.getElementById("yt-account").innerHTML =
				"youtube account properly setup - no account.<br>\
				make sure you have followed the setup step by step\
				and remove userdata.json to retry."
			}
			r.addEventListener("error", setError)
		}




		function relay_code_update() {
			document.cookie = "relay_key="
							+ document.getElementById("relay-code").value
							+ "; Path=/; expires=Fri, 31 Dec 2066 23:59:59 GMT"
			alert("relay code set! make sure to test your relay connection before using relay.")
		}
		function relay_port_update() {
			document.cookie = "relay_port="
							+ document.getElementById("relay-port").value
							+ "; Path=/; expires=Fri, 31 Dec 2066 23:59:59 GMT"
			alert("relay port set! make sure to test your relay connection before using relay.")
		}


		// login_simulate change
		function login_simulate_change(element) {
			var targetName = element.getElementsByTagName("span")[0].innerHTML
			var globalFlags = document.cookie;
			if(globalFlags.indexOf("global_flags=") !== -1) {
				globalFlags = globalFlags.split("global_flags=")[1].split(";")[0]
				if(globalFlags.indexOf("login_simulate") == -1) {
					var loginSimulateName = globalFlags
											.split("login_simulate")[1]
											.split(":")[0]
					globalFlags = globalFlags.replace(
						loginSimulateName,
						targetName
					)
				} else {
					globalFlags += "login_simulate" + targetName + ":"
				}
			} else {
				globalFlags = "login_simulate" + targetName + ":"
			}
			document.cookie = "global_flags="
							+ globalFlags
							+ "; Path=/; expires=Fri, 31 Dec 2066 23:59:59 GMT"
			alert("username updated")
		}

		// relay settings
		function apply_relay_settings() {
			var host = "http://127.0.0.1:" + get_relay_port() + "/"
			var settings = []
			var checkboxes = document.querySelectorAll("#relay-settings input")
			for(var s in checkboxes) {
				try {
					if(checkboxes[s].checked) {
						settings.push(checkboxes[s].id)
					}
				}
				catch(error) {}
			}



			var r = new XMLHttpRequest();
			r.open("POST", host + "apply_relay_settings?timestamp=" + Date.now())
			r.setRequestHeader("auth", get_relay_key())
			r.send(JSON.stringify({
				"settings": settings
			}))
			setSyncStatus("syncing")
			r.addEventListener("load", function(e) {
				var res = JSON.parse(r.responseText)
				var syncStatus = "done"
				if(res.subscriptions) {
					syncStatus += ", " + res.subscriptions.length
								  + " subscriptions found"
					appendSubscriptions(res.subscriptions)
				}
				if(res.playlists) {
					syncStatus += ", " + res.playlists.length
								  + " playlists found"
					appendPlaylists(res.playlists)
				}
				setSyncStatus(syncStatus)
			}, false)
		}

		function setSyncStatus(text) {
			document.querySelector("#relay-sync-status").innerHTML
			= "relay syncing status: " + text
		}

		// sync subscriptions with data from relay
		function appendSubscriptions(subscriptions) {
			var subs = []
			try {
				subs = JSON.parse(localStorage.subscriptions)
			}
			catch(error) {}
			subscriptions.forEach(function(subscription) {
				// check if not already added
				var added = false;
				subs.forEach(function(sub) {
					if(sub.url == subscription.url) added = true
				})
				if(added) return;
				subs.push(subscription)
			})
			localStorage.subscriptions = JSON.stringify(subs)
		}

		// sync playlists with data from relay
		function appendPlaylists(playlists) {
			var playlistIndex = []
			try {
				playlistIndex = JSON.parse(localStorage.playlistsIndex)
			}
			catch(error) {}
			playlists.forEach(function(playlist) {
				// check if not already added
				var added = false;
				playlistIndex.forEach(function(p) {
					if(p.id == playlist.id) added = true
				})
				if(added) return;
				playlistIndex.push(playlist)
			})
			localStorage.playlistsIndex = JSON.stringify(playlistIndex)
		}
	</script>
</body>

</html>